{
  "summary": {
    "totalEndpoints": 77,
    "documented": 44,
    "missing": 33,
    "orphanedFiles": 0
  },
  "genuinelyMissing": [
    {
      "path": "/api/v3/integrator/webhook",
      "method": "PATCH",
      "operationId": "IntegratorController_updateWebhookSettings_api/v3",
      "summary": "Update webhook configuration",
      "tags": [
        "INTEGRATOR"
      ],
      "description": "Allows an integrator to update their default webhook URL, secret, and event subscriptions.",
      "reason": "no-file",
      "expectedFile": "v3/api-reference/integrator/update-webhook"
    },
    {
      "path": "/api/v3/customer/validate/mobile-money",
      "method": "POST",
      "operationId": "AccountValidationController_validateMobileMoneyAccount_api/v3",
      "summary": "Validate mobile money account",
      "tags": [
        "CUSTOMER - VALIDATION"
      ],
      "description": "Validates a mobile money account by checking the phone number format and country support. Optionally verifies if the account exists and returns account holder information."
    },
    {
      "path": "/api/v3/customer/validate/bank",
      "method": "POST",
      "operationId": "AccountValidationController_validateBankAccount_api/v3",
      "summary": "Validate bank account",
      "tags": [
        "CUSTOMER - VALIDATION"
      ],
      "description": "Validates a bank account by checking the account number format, bank code, and country support. Returns validation status and bank information."
    },
    {
      "path": "/api/v3/kyc",
      "method": "POST",
      "operationId": "KycController_createKyc_api/v3",
      "summary": "Create Kyc Basic Details",
      "tags": [
        "KYC"
      ],
      "description": "This api will create a new kyc basic details"
    },
    {
      "path": "/api/v3/kyc/integrator/users",
      "method": "GET",
      "operationId": "KycController_integratorKycUsers_api/v3",
      "summary": "Get Integrator Kyc Users",
      "tags": [
        "KYC"
      ],
      "description": "This api will get all integrator kyc users"
    },
    {
      "path": "/health",
      "method": "GET",
      "operationId": "HealthController_check",
      "summary": "Check for the application health",
      "tags": [
        "HEALTH"
      ],
      "description": "This endpoint is used to check for the health of the application"
    },
    {
      "path": "/api/v3/customer/support/countries",
      "method": "GET",
      "operationId": "CountrySupportController_getSupportedCountries_api/v3",
      "summary": "Get supported countries",
      "tags": [
        "CUSTOMER - COUNTRY SUPPORT"
      ],
      "description": "Returns a list of all supported countries with their configurations. Supports filtering by service type, currency, country code, and active status. Data is aggregated from the Provider Registry for real-time accuracy. The isEnabled flag indicates whether the authenticated integrator has this service enabled and providers attached."
    },
    {
      "path": "/api/v3/customer/support/countries/{countryCode}",
      "method": "GET",
      "operationId": "CountrySupportController_getCountryDetails_api/v3",
      "summary": "Get detailed country information",
      "tags": [
        "CUSTOMER - COUNTRY SUPPORT"
      ],
      "description": "Returns comprehensive details about a specific country including supported currencies, networks, and service availability. The isEnabled flag indicates whether the authenticated integrator has each service enabled and providers attached."
    },
    {
      "path": "/api/v3/customer/support/networks/{countryCode}",
      "method": "GET",
      "operationId": "CountrySupportController_getNetworkAvailability_api/v3",
      "summary": "Get available networks for a country",
      "tags": [
        "CUSTOMER - COUNTRY SUPPORT"
      ],
      "description": "Returns all active mobile money networks available in a specific country, aggregated from all providers. Indicates if network selection is required."
    },
    {
      "path": "/api/v3/customer/support/banks",
      "method": "GET",
      "operationId": "CountrySupportController_getBanks_api/v3",
      "summary": "Get available banks",
      "tags": [
        "CUSTOMER - COUNTRY SUPPORT"
      ],
      "description": "Returns a list of all supported banks with optional filtering by currency or search term. Banks are sourced from the centralized bank data registry."
    },
    {
      "path": "/api/v3/customer/support/services/deposit",
      "method": "GET",
      "operationId": "CountrySupportController_getDepositConfiguration_api/v3",
      "summary": "Get deposit service configuration",
      "tags": [
        "CUSTOMER - COUNTRY SUPPORT"
      ],
      "description": "Returns all countries that support deposit (onramp) services with their configurations."
    },
    {
      "path": "/api/v3/customer/support/services/withdraw",
      "method": "GET",
      "operationId": "CountrySupportController_getWithdrawConfiguration_api/v3",
      "summary": "Get withdraw service configuration",
      "tags": [
        "CUSTOMER - COUNTRY SUPPORT"
      ],
      "description": "Returns all countries that support withdraw (offramp) services with their configurations."
    },
    {
      "path": "/api/v3/offramp/transactions",
      "method": "GET",
      "operationId": "OffRampController_getIntegratorOfframps_api/v3",
      "summary": "Get Integrator Offramp Transactions",
      "tags": [
        "OFFRAMP"
      ],
      "description": "This endpoint will return all offramp transactions for the integrator."
    },
    {
      "path": "/api/v3/offramp/{referenceId}",
      "method": "GET",
      "operationId": "OffRampController_getOfframpStatus_api/v3",
      "summary": "Get Offramp MobileMoney Status",
      "tags": [
        "OFFRAMP"
      ],
      "description": "This endpoint will return the status of the withdrawal request."
    },
    {
      "path": "/api/v3/offramp/refund-status/{referenceId}",
      "method": "GET",
      "operationId": "OffRampController_getRefundStatus_api/v3",
      "summary": "Get Refund Status",
      "tags": [
        "OFFRAMP"
      ],
      "description": "Get the status of an onchain refund. Refunds are automatically initiated 5 minutes after a failed transaction if the crypto was successfully received but fiat transfer failed."
    },
    {
      "path": "/api/v3/offramp/retry-refund/{referenceId}",
      "method": "POST",
      "operationId": "OffRampController_retryRefund_api/v3",
      "summary": "Retry Failed Refund",
      "tags": [
        "OFFRAMP"
      ],
      "description": "Retry a failed crypto refund for an offramp transaction. Can be retried up to 3 times."
    },
    {
      "path": "/api/v3/onramp/crypto/{referenceId}",
      "method": "GET",
      "operationId": "OnrampController_getOnrampCrypto_api/v3",
      "summary": "Get Status Response",
      "tags": [
        "ONRAMP"
      ],
      "description": "This endpoint will be used to get the status of the transaction"
    },
    {
      "path": "/api/v3/onramp/{referenceId}",
      "method": "GET",
      "operationId": "OnrampController_getOnramp_api/v3",
      "summary": "Get Status Response",
      "tags": [
        "ONRAMP"
      ],
      "description": "This endpoint will be used to get the status of the transaction"
    },
    {
      "path": "/api/v3/dashboard/bulk-payments/api/transactions/{transactionId}",
      "method": "GET",
      "operationId": "ApiBulkPaymentsController_getTransactionById_api/v3",
      "summary": "Get transaction details with batches",
      "tags": [
        "API Bulk Payments"
      ]
    },
    {
      "path": "/api/v3/dashboard/bulk-payments/api/transactions",
      "method": "GET",
      "operationId": "ApiBulkPaymentsController_getTransactions_api/v3",
      "summary": "Get paginated transactions",
      "tags": [
        "API Bulk Payments"
      ]
    },
    {
      "path": "/api/v3/dashboard/bulk-payments/api/wallets",
      "method": "GET",
      "operationId": "ApiBulkPaymentsController_getAvailableWallets_api/v3",
      "summary": "Get available wallets for bulk payments",
      "tags": [
        "API Bulk Payments"
      ]
    },
    {
      "path": "/api/v3/dashboard/bulk-payments/api/validate-csv",
      "method": "POST",
      "operationId": "ApiBulkPaymentsController_validateCSV_api/v3",
      "summary": "Validate CSV file for bulk payments with multi-currency support",
      "tags": [
        "API Bulk Payments"
      ]
    },
    {
      "path": "/api/v3/dashboard/bulk-payments/api/batches/create",
      "method": "POST",
      "operationId": "ApiBulkPaymentsController_createBatches_api/v3",
      "summary": "Create bulk payment batches",
      "tags": [
        "API Bulk Payments"
      ]
    },
    {
      "path": "/api/v3/dashboard/bulk-payments/api/preview",
      "method": "POST",
      "operationId": "ApiBulkPaymentsController_previewBatch_api/v3",
      "summary": "Preview bulk payment batches",
      "tags": [
        "API Bulk Payments"
      ]
    },
    {
      "path": "/api/v3/dashboard/bulk-payments/api/batches",
      "method": "GET",
      "operationId": "ApiBulkPaymentsController_getBatches_api/v3",
      "summary": "Get bulk payment batches",
      "tags": [
        "API Bulk Payments"
      ]
    },
    {
      "path": "/api/v3/dashboard/bulk-payments/api/stats",
      "method": "GET",
      "operationId": "ApiBulkPaymentsController_getStats_api/v3",
      "summary": "Get bulk payment statistics",
      "tags": [
        "API Bulk Payments"
      ]
    },
    {
      "path": "/api/v3/dashboard/bulk-payments/api/batches/{batchId}",
      "method": "GET",
      "operationId": "ApiBulkPaymentsController_getBatchById_api/v3",
      "summary": "Get bulk payment batch by ID",
      "tags": [
        "API Bulk Payments"
      ]
    },
    {
      "path": "/api/v3/dashboard/bulk-payments/api/batches/{batchId}/process",
      "method": "POST",
      "operationId": "ApiBulkPaymentsController_processBatch_api/v3",
      "summary": "Process a bulk payment batch",
      "tags": [
        "API Bulk Payments"
      ]
    },
    {
      "path": "/api/v3/dashboard/bulk-payments/api/batches/{batchId}/payments",
      "method": "GET",
      "operationId": "ApiBulkPaymentsController_getBatchPayments_api/v3",
      "summary": "Get payments for a specific batch",
      "tags": [
        "API Bulk Payments"
      ]
    },
    {
      "path": "/api/v3/cross-boarder/invoice",
      "method": "POST",
      "operationId": "FiatToFiatController_generateInvoice_api/v3",
      "summary": "Generate Invoice",
      "tags": [
        "CROSS BOARDER"
      ],
      "description": "Generate Invoice"
    },
    {
      "path": "/api/v3/cross-boarder/invoice/{referenceId}",
      "method": "GET",
      "operationId": "FiatToFiatController_getInvoice_api/v3",
      "summary": "Get Invoice",
      "tags": [
        "CROSS BOARDER"
      ],
      "description": "Get Invoice"
    },
    {
      "path": "/api/v3/cross-boarder/invoice/pay",
      "method": "POST",
      "operationId": "FiatToFiatController_payInvoice_api/v3",
      "summary": "Pay Invoice",
      "tags": [
        "CROSS BOARDER"
      ],
      "description": "Pay Invoice"
    },
    {
      "path": "/api/v3/cross-boarder/invoice/pay/{referenceId}",
      "method": "GET",
      "operationId": "FiatToFiatController_getPaidInvoiceStatus_api/v3",
      "summary": "Get Paid Invoice Status",
      "tags": [
        "CROSS BOARDER"
      ],
      "description": "Get Paid Invoice Status"
    }
  ],
  "orphanedFiles": [],
  "missingFromDocsJson": [
    "v3/run-in-postman",
    "v3/overview",
    "v3/quickstart",
    "v3/development",
    "v3/essentials/error-handling",
    "v3/essentials/rate-limits",
    "v3/essentials/webhooks"
  ]
}