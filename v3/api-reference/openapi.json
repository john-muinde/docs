{
  "openapi": "3.0.0",
  "info": {
    "title": "Kotani Pay API",
    "version": "3.0",
    "description": "Digital asset transactions using local payment channels",
    "contact": {
      "name": "Kotani Pay Support",
      "email": "support@kotanipay.com",
      "url": "https://kotanipay.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.kotanipay.io",
      "description": "Production"
    },
    {
      "url": "https://sandbox-api.kotanipay.io",
      "description": "Sandbox"
    },
    {
      "url": "https://staging-api.kotanipay.io",
      "description": "Staging"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "operationId": "HealthController_check",
        "summary": "Check for the application health",
        "description": "This endpoint is used to check for the health of the application",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["HEALTH"]
      }
    },
    "/api/v3/integrator": {
      "post": {
        "operationId": "IntegratorController_createIntegrator",
        "summary": "Create an integrator",
        "description": "This endpoint will help you create an integrator",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIntegratorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "The record has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/IntegratorResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["INTEGRATOR"]
      },
      "get": {
        "operationId": "IntegratorController_getIntegrator",
        "summary": "Get an Integrator Details.",
        "description": "This endpoint is used to retrieve an integrator details",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "The record has been successfully retrieved."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/IntegratorResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["INTEGRATOR"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/auth/login": {
      "post": {
        "operationId": "AuthController_authLogin",
        "summary": "Authentication Login",
        "description": "Login to your integrator account. This endpoint allows you to login to your account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "login magic link sent to your email"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["AUTHENTICATION"]
      }
    },
    "/api/v3/auth/refresh": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "summary": "Refresh Access Token",
        "description": "Refresh an expired access token using a valid refresh token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string",
                    "description": "The refresh token obtained during login",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                },
                "required": ["refresh_token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Token refreshed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "refresh_token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "expires_in": {
                          "type": "integer",
                          "example": 3600
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid refresh token"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["AUTHENTICATION"]
      }
    },
    "/api/v3/auth/api-key/secure": {
      "get": {
        "operationId": "AuthController_generateApiKeySecret",
        "summary": "Generate API Key.",
        "description": "This endpoint is used to generate an the API Key which can be used to authorize transactions and more",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Api-key generated successfully"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/ApiKeyResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Api Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["AUTHENTICATION"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/wallet/fiat": {
      "post": {
        "operationId": "FiatWalletController_createFiatWallet",
        "summary": "Create a Fiat Wallet",
        "description": "This endpoint will create a fiat wallet for the integrator.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFiatWalletDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Fiat wallet has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/FiatWalletResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["FIAT WALLET"],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "operationId": "FiatWalletController_getUsersFiatWallet",
        "summary": "Get Integrator Fiat Wallets",
        "description": "This endpoint will return all the fiat wallets created by the integrator.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Fiat wallet has been successfully retrieved."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FiatWalletResponseDto"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["FIAT WALLET"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/wallet/fiat/{id}": {
      "get": {
        "operationId": "FiatWalletController_getFiatWallet",
        "summary": "Get Integrator Fiat Wallet by Wallet ID",
        "description": "This endpoint will return the fiat wallet created by the integrator.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "The wallet has been successfully retrieved."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/FiatWalletResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Wallet Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["FIAT WALLET"],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "operationId": "FiatWalletController_updateFiatWallet",
        "summary": "Update Integrator Fiat Wallet by Wallet ID",
        "description": "This endpoint will update the fiat wallet created by the integrator.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateFiatWalletDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Fiat wallet has been successfully updated."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/FiatWalletResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Wallet Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["FIAT WALLET"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/wallet/fiat/currency/{currency}": {
      "get": {
        "operationId": "FiatWalletController_getFiatWalletByCurrency",
        "summary": "Get Integrator Fiat Wallet by Currency",
        "description": "This endpoint will return the fiat wallet created by the integrator.",
        "parameters": [
          {
            "name": "currency",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "The wallet has been successfully retrieved."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/FiatWalletResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Wallet Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["FIAT WALLET"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/wallet/transfer/deposit-balance": {
      "post": {
        "operationId": "FiatWalletController_transferDepositBalance",
        "summary": "Transfer Deposit Balance",
        "description": "This endpoint will transfer the deposit balance of the fiat wallet to the main balance.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferDepositBalanceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Transfer deposit balance has been successfully done."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/FiatWalletResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Wallet Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["FIAT WALLET"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/wallet/crypto": {
      "get": {
        "operationId": "CryptoWalletController_getUsersCryptoWallets",
        "summary": "Get Integrator Crypto Wallets",
        "description": "This endpoint will return all the crypto wallets created by the integrator.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Crypto wallet has been successfully retrieved."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetCryptoWalletResponseDto"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CRYPTO WALLET"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/wallet/crypto/{id}": {
      "get": {
        "operationId": "CryptoWalletController_getFiatWallet",
        "summary": "Get Integrator Crypto Wallet by Wallet ID",
        "description": "This endpoint will return the crypto wallet created by the integrator by passing the wallet id.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Crypto Wallet has been successfully retrieved."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/GetCryptoWalletResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CRYPTO WALLET"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/customer/mobile-money": {
      "post": {
        "operationId": "MobileMoneyCustomerController_createCustomer",
        "summary": "Create a mobile money customer",
        "description": "An integrator can use this endpoint to create the customers who will be either receiving or sending money using mobile money.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMobileMoneyCustomerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/MobileMoneyCustomerDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CUSTOMER - MOBILE MONEY"],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "operationId": "MobileMoneyCustomerController_getUserCustomers",
        "summary": "Get all mobile money customers",
        "description": "An integrator can use this endpoint to get all the customers who will be either receiving or sending money using mobile money.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customers successfully retrieved."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MobileMoneyCustomerDto"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CUSTOMER - MOBILE MONEY"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/customer/mobile-money/{customer_key}": {
      "patch": {
        "operationId": "MobileMoneyCustomerController_updateCustomer",
        "summary": "Update a mobile money customer",
        "description": "An integrator can use this endpoint to update the customers who will be either receiving or sending money using mobile money.",
        "parameters": [
          {
            "name": "customer_key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMobileMoneyCustomerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Bio Data has been successfully updated."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/MobileMoneyCustomerDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Api Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CUSTOMER - MOBILE MONEY"],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "operationId": "MobileMoneyCustomerController_getCustomerDetails",
        "summary": "Get a mobile money customer by customer key",
        "description": "An integrator can use this endpoint to get the customer who will be either receiving or sending money using mobile money by passing customer key.",
        "parameters": [
          {
            "name": "customer_key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer fetched successfully."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/MobileMoneyCustomerDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "tags": ["CUSTOMER - MOBILE MONEY"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/customer/mobile-money/phone/{phone_number}": {
      "get": {
        "operationId": "MobileMoneyCustomerController_getCustomerDetailsByPhone",
        "summary": "Get a mobile money customer by Phone",
        "description": "An integrator can use this endpoint to get the customer who will be either receiving or sending money using mobile money by passing phone number.",
        "parameters": [
          {
            "name": "phone_number",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer fetched successfully."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/MobileMoneyCustomerDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer not found."
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CUSTOMER - MOBILE MONEY"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/withdraw/mobile-money": {
      "post": {
        "operationId": "WithdrawController_mobileMoney",
        "summary": "Withdraw Fiat to Mobile Money",
        "description": "This api will withdraw fiat from the integrator’s fiat wallet to the customer’s mobile money wallet.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWithdrawalDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Withdrawal has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/WithdrawResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["WITHDRAW"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/withdraw/status/{reference_id}": {
      "get": {
        "operationId": "WithdrawController_getWithdrawalStatus",
        "summary": "Get Withdrawal Mobile Money Status",
        "description": "This endpoint will return the status of the withdrawal request.",
        "parameters": [
          {
            "name": "reference_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Withdrawal status retrieved"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/WithdrawStatusResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Reference Id not found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["WITHDRAW"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/deposit/mobile-money": {
      "post": {
        "operationId": "DepositMobileMoneyController_mobileMoney",
        "summary": "Deposit via mobile money",
        "description": "An integrator’s customers can initiate a deposit from their respective mobile money wallets.     An STK push will be sent to the customer and the respective amount will be deducted from their mobile money wallets and deposited into the integrator’s fiat wallet",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepositDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Deposit has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/DepositResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["MOBILE MONEY DEPOSIT"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/deposit/mobile-money/status/{reference_id}": {
      "get": {
        "operationId": "DepositMobileMoneyController_getWithdrawalStatus",
        "summary": "Get Deposit on Mobile Money status",
        "description": "An integrator can use this endpoint to check the status of a deposit",
        "parameters": [
          {
            "name": "reference_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Deposit status retrieved."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/DepositStatusResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["MOBILE MONEY DEPOSIT"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/deposit/bank/checkout": {
      "post": {
        "operationId": "DepositBankCheckoutController_mobileMoney",
        "summary": "Deposit via bank checkout",
        "description": "Customer Completed transaction using Checkout Url",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankDepositCheckoutDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Checkout Created successfully created."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/BankDepositCheckoutDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["BANK DEPOSIT(checkout)"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/deposit/bank/checkout/status/{reference_id}": {
      "get": {
        "operationId": "DepositBankCheckoutController_getWithdrawalStatus",
        "summary": "Get Deposit status",
        "description": "An integrator can use this endpoint to check the status of a deposit",
        "parameters": [
          {
            "name": "reference_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Deposit status retrieved."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/DepositCheckoutResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["BANK DEPOSIT(checkout)"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/deposit/card": {
      "post": {
        "operationId": "DepositCardController_mobileMoney",
        "summary": "Deposit via card",
        "description": "Customer Completed transaction using Checkout Url",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardDepositDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Checkout Created successfully created."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/DepositResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CARD DEPOSIT"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/deposit/card/{reference_id}": {
      "get": {
        "operationId": "DepositCardController_getWithdrawalStatus",
        "summary": "Get Deposit status",
        "description": "An integrator can use this endpoint to check the status of a deposit",
        "parameters": [
          {
            "name": "reference_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Deposit status retrieved."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/DepositCheckoutStatusResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CARD DEPOSIT"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/rate/{from}/{to}": {
      "get": {
        "operationId": "RateController_getRates",
        "summary": "Get exchange rate",
        "description": "An integrator can use this endpoint to get the exchange rate between two currencies",
        "parameters": [
          {
            "name": "from",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Available exchange rate."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/RateResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["RATES"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/rate/onramp": {
      "post": {
        "operationId": "RateController_getOnrampRates",
        "summary": "Get Onramp Exchange rate",
        "description": "An integrator can use this endpoint to get the exchange rate between two currencies",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnrampRateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Available exchange rate."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/OnchainRateResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["RATES"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/rate/offramp": {
      "post": {
        "operationId": "RateController_getOffRampRates",
        "summary": "Get Offramp Exchange rate",
        "description": "An integrator can use this endpoint to get the exchange rate between two currencies",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfframpRateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Available exchange rate."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/OnchainRateResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["RATES"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/rate/fiat": {
      "post": {
        "operationId": "RateController_getFiatToFiatRate",
        "summary": "Get Fiat to Fiat exchange rate",
        "description": "An integrator can use this endpoint to get the exchange rate between two fiat currencies",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiatRateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Available exchange rate."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/FiatToFiatRateResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["RATES"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/rate": {
      "get": {
        "operationId": "RateController_rates",
        "summary": "Get all exchange rates",
        "description": "An integrator can use this endpoint to get all the exchange rates available",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Available exchange rate."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RateResponseDto"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["RATES"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/providers": {
      "post": {
        "operationId": "PaymentProviderController_providers",
        "summary": "Get Payment Providers",
        "description": "This Api Handles fetching of payment providers",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["PAYMENT PROVIDERS"]
      }
    },
    "/api/v3/withdraw/v2/bank": {
      "post": {
        "operationId": "WithdrawTransactionController_mobileMoney",
        "summary": "BANK WITHDRAWAL",
        "description": "This Api Handles payout to bank, currently only supports SA Banks",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WithdrawTransactionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Withdrawal has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/WithdrawResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["WITHDRAW V2"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/withdraw/v2/bank/status/{referenceId}": {
      "get": {
        "operationId": "WithdrawTransactionController_getWithdrawTransaction",
        "summary": "BANK WITHDRAWAL STATUS",
        "description": "This Api Handles payout to bank, currently only supports SA Banks",
        "parameters": [
          {
            "name": "referenceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["WITHDRAW V2"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/withdraw/v2/bank/supporting-banks/{currency}": {
      "get": {
        "operationId": "WithdrawTransactionController_getSupportingBanksWithCurrency",
        "summary": "GET SUPPORTING BANKS",
        "description": "This Api Handles fetching of supporting banks",
        "parameters": [
          {
            "name": "currency",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["WITHDRAW V2"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/kyc": {
      "post": {
        "operationId": "KycController_createKyc",
        "summary": "Create Kyc Basic Details",
        "description": "This api will create a new kyc basic details",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KycBasicDetailsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Kyc Basic Details created successfully"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/KycResponseDto"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["KYC"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/kyc/address": {
      "post": {
        "operationId": "KycController_createAddress",
        "summary": "Create Kyc Address",
        "description": "This api will create a new kyc address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KycAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Kyc Address created successfully"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/KycResponseDto"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["KYC"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/kyc/document": {
      "post": {
        "operationId": "KycController_createDocument",
        "summary": "Create Kyc Document",
        "description": "This api will create a new kyc document",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KycDocumentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Kyc Document created successfully"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/KycResponseDto"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["KYC"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/kyc/status/{kycId}": {
      "get": {
        "operationId": "KycController_verifyKyc",
        "summary": "Get Kyc Status",
        "description": "This api will get kyc status",
        "parameters": [
          {
            "name": "kycId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved kyc status"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/KycResponseDto"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["KYC"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/kyc/integrator/users": {
      "get": {
        "operationId": "KycController_integratorKycUsers",
        "summary": "Get Integrator Kyc Users",
        "description": "This api will get all integrator kyc users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved kyc users"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IntegratorKycUsersResponseDto"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["KYC"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/offramp": {
      "post": {
        "operationId": "OffRampController_createOfframp",
        "summary": "Offramp Request",
        "description": "This endpoint will create a offramp request for a customer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfframpDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Offramp Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Offramp has been successfully created"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/OfframpResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["OFFRAMP"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/offramp/{referenceId}": {
      "get": {
        "operationId": "OffRampController_getOfframpStatus",
        "summary": "Get Offramp MobileMoney Status",
        "description": "This endpoint will return the status of the withdrawal request.",
        "parameters": [
          {
            "name": "referenceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Offramp status retrieved"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/OfframpResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Reference Id not found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["OFFRAMP"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/offramp/cancel/{referenceId}": {
      "get": {
        "operationId": "OffRampController_getCancelTransaction",
        "summary": "Cancel Offramp Transaction",
        "description": "This endpoint will cancel the offramp transaction.",
        "parameters": [
          {
            "name": "referenceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Reference Id not found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["OFFRAMP"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/onramp/crypto": {
      "post": {
        "operationId": "OnrampController_createOnrampCrypto",
        "summary": "Send Token to Crypto Wallet",
        "description": "This endpoint will send token to any crypto wallet",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOnrampCryptoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Request has been successfully created"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/OnrampCryptoResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["ONRAMP"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/onramp/crypto/{referenceId}": {
      "get": {
        "operationId": "OnrampController_getOnrampCrypto",
        "summary": "Get Status Response",
        "description": "This endpoint will be used to get the status of the transaction",
        "parameters": [
          {
            "name": "referenceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Onramp crypto status successfully retrieved."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/OnrampCryptoResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["ONRAMP"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/onramp": {
      "post": {
        "operationId": "OnrampController_onramp",
        "summary": "Create Onramp",
        "description": "You can create an onramp request with either mobile money or bank checkout",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnrampDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Request has been successfully created"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/OnrampRequestResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["ONRAMP"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/onramp/{referenceId}": {
      "get": {
        "operationId": "OnrampController_getOnramp",
        "summary": "Get Status Response",
        "description": "This endpoint will be used to get the status of the transaction",
        "parameters": [
          {
            "name": "referenceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Onramp status successfully retrieved."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/OnrampResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["ONRAMP"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/cross-boarder/invoice": {
      "post": {
        "operationId": "FiatToFiatController_generateInvoice",
        "summary": "Generate Invoice",
        "description": "Generate Invoice",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Invoice has been successfully created"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/DepositResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CROSS BOARDER"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/cross-boarder/invoice/{referenceId}": {
      "get": {
        "operationId": "FiatToFiatController_getInvoice",
        "summary": "Get Invoice",
        "description": "Get Invoice",
        "parameters": [
          {
            "name": "referenceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Invoice successfully retrieved"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/GetInvoiceResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CROSS BOARDER"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/cross-boarder/invoice/pay": {
      "post": {
        "operationId": "FiatToFiatController_payInvoice",
        "summary": "Pay Invoice",
        "description": "Pay Invoice",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Invoice successfully retrieved"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/PayInvoiceResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CROSS BOARDER"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/cross-boarder/invoice/pay/{referenceId}": {
      "get": {
        "operationId": "FiatToFiatController_getPaidInvoiceStatus",
        "summary": "Get Paid Invoice Status",
        "description": "Get Paid Invoice Status",
        "parameters": [
          {
            "name": "referenceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Invoice successfully retrieved"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/PayInvoiceResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["CROSS BOARDER"],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "JWT": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "IntegratorResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": "xxxxxxxxxxxxxxxxxxxxxxxx"
          },
          "organization": {
            "type": "string",
            "description": "organization",
            "example": "A&B Company"
          },
          "first_name": {
            "type": "string",
            "description": "first_name",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "last_name",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "description": "email",
            "example": "ab@gmail.com"
          },
          "phone": {
            "type": "string",
            "description": "phone",
            "example": "+xxx xxx xxx xxx"
          }
        },
        "required": [
          "organization",
          "first_name",
          "last_name",
          "email",
          "phone"
        ]
      },
      "CreateIntegratorDto": {
        "type": "object",
        "properties": {
          "organization": {
            "type": "string",
            "description": "organization",
            "example": "A&B Company"
          },
          "product_name": {
            "type": "string",
            "description": "product name",
            "example": "MY APP NAME"
          },
          "first_name": {
            "type": "string",
            "description": "first_name",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "last_name",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "description": "email",
            "example": "ab@gmail.com"
          },
          "phone": {
            "type": "string",
            "description": "phone",
            "example": "+xxx xxx xxx xxx"
          },
          "country_code": {
            "type": "string",
            "description": "country_code",
            "example": "US"
          }
        },
        "required": [
          "organization",
          "product_name",
          "first_name",
          "last_name",
          "email",
          "phone",
          "country_code"
        ]
      },
      "ApiKeyResponseDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "key",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          }
        },
        "required": ["key"]
      },
      "FiatWalletResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet",
            "example": "My Wallet"
          },
          "type": {
            "type": "string",
            "description": "Select wallet type",
            "enum": ["crypto", "fiat"],
            "example": "eg crypto or fiat"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the wallet",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "example": "eg NGN or GHS or KES"
          },
          "integrator": {
            "type": "string",
            "description": "The integrator of the wallet",
            "example": "4440cb6a-f7c7-11ed-b67e-0242ac120002"
          },
          "status": {
            "type": "string",
            "description": "The status of the wallet",
            "enum": ["active", "inactive", "suspended", "deleted"],
            "example": "eg active or inactive"
          },
          "id": {
            "type": "string",
            "description": "The id of the wallet",
            "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
          },
          "balance": {
            "type": "number",
            "description": "The amount of the wallet",
            "example": 1000
          },
          "deposit_balance": {
            "type": "number",
            "description": "Amount of the wallet that has been deposited so far",
            "example": 1000
          }
        },
        "required": [
          "name",
          "type",
          "currency",
          "integrator",
          "id",
          "balance",
          "deposit_balance"
        ]
      },
      "CreateFiatWalletDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet",
            "example": "My Wallet"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the wallet",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "example": "eg NGN or GHS or KES"
          }
        },
        "required": ["name", "currency"]
      },
      "updateFiatWalletDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet",
            "example": "My Wallet"
          }
        },
        "required": ["name"]
      },
      "TransferDepositBalanceDto": {
        "type": "object",
        "properties": {
          "walletId": {
            "type": "string",
            "description": "The ID of the fiat wallet."
          },
          "amount": {
            "type": "number",
            "description": "The amount to transfer from the deposit balance to the main balance."
          }
        },
        "required": ["walletId"]
      },
      "GetCryptoWalletResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet",
            "example": "My Wallet"
          },
          "balance": {
            "type": "number",
            "description": "The amount of the wallet",
            "example": 1000
          },
          "privateAddress": {
            "type": "string",
            "description": "Wallet private address",
            "example": "0x1234567890"
          },
          "publicAddress": {
            "type": "string",
            "description": "Wallet public address",
            "example": "0x1234567890"
          },
          "address": {
            "type": "string",
            "description": "Wallet transaction address",
            "example": "0x1234567890"
          },
          "customAddress": {
            "type": "string",
            "description": "custom for deposits public address",
            "example": "0x1234567890"
          },
          "type": {
            "type": "string",
            "description": "Select wallet type",
            "enum": ["crypto", "fiat"],
            "example": "eg crypto or fiat"
          },
          "coin": {
            "type": "string",
            "description": "The currency of the wallet",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO",
              "CKES",
              "CGHS",
              "MSAT"
            ],
            "example": "eg CUSD or USDC or USDT"
          },
          "chain": {
            "type": "string",
            "description": "The chain of the wallet.Its required if the wallet is a crypto wallet",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA",
              "BASE",
              "LISK",
              "VICTION",
              "SCROLL"
            ],
            "example": "eg CELO or ETHEREUM or AVALANCHE or POLYGON"
          },
          "id": {
            "type": "string",
            "description": "The id of the wallet",
            "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
          },
          "tokenBalance": {
            "description": "The token balance of the wallet",
            "example": [
              {
                "token": "USDT",
                "balance": "1000"
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "balance", "type", "coin", "id"]
      },
      "MobileMoneyCustomerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "enum": [
              "GHA",
              "NG",
              "KE",
              "ZA",
              "CIV",
              "ZM",
              "CMR",
              "COD",
              "SEN",
              "TZ",
              "MWI",
              "UG",
              "EG",
              "RW"
            ],
            "example": "GHA or KE"
          },
          "network": {
            "type": "string",
            "enum": [
              "MTN",
              "AIRTEL",
              "VODAFONE",
              "TIGO",
              "ORANGE",
              "NOT_SUPPORTED",
              "ZAMTEL",
              "MPESA",
              "CHECKOUT",
              "BKTRX",
              "CRDTRX",
              "MOOV",
              "TMONEY",
              "FREE",
              "EXPRESSO",
              "HALOPESA",
              "VODACOM"
            ],
            "example": "MPESA or MTN or AIRTEL or VODAFONE"
          },
          "customer_key": {
            "type": "string"
          },
          "account_name": {
            "type": "string"
          },
          "integrator": {
            "type": "string"
          }
        },
        "required": ["phone_number", "country_code"]
      },
      "CreateMobileMoneyCustomerDto": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "enum": [
              "GHA",
              "NG",
              "KE",
              "ZA",
              "CIV",
              "ZM",
              "CMR",
              "COD",
              "SEN",
              "TZ",
              "MWI",
              "UG",
              "EG",
              "RW"
            ],
            "example": "GHA or KE"
          },
          "network": {
            "type": "string",
            "enum": [
              "MTN",
              "AIRTEL",
              "VODAFONE",
              "TIGO",
              "ORANGE",
              "NOT_SUPPORTED",
              "ZAMTEL",
              "MPESA",
              "CHECKOUT",
              "BKTRX",
              "CRDTRX",
              "MOOV",
              "TMONEY",
              "FREE",
              "EXPRESSO",
              "HALOPESA",
              "VODACOM"
            ],
            "example": "MPESA or MTN or AIRTEL or VODAFONE"
          },
          "account_name": {
            "type": "string"
          }
        },
        "required": ["phone_number", "country_code"]
      },
      "UpdateMobileMoneyCustomerDto": {
        "type": "object",
        "properties": {
          "network": {
            "type": "string",
            "enum": [
              "MTN",
              "AIRTEL",
              "VODAFONE",
              "TIGO",
              "ORANGE",
              "NOT_SUPPORTED",
              "ZAMTEL",
              "MPESA",
              "CHECKOUT",
              "BKTRX",
              "CRDTRX",
              "MOOV",
              "TMONEY",
              "FREE",
              "EXPRESSO",
              "HALOPESA",
              "VODACOM"
            ],
            "example": "MPESA or MTN or AIRTEL or VODAFONE"
          },
          "account_name": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "enum": [
              "GHA",
              "NG",
              "KE",
              "ZA",
              "CIV",
              "ZM",
              "CMR",
              "COD",
              "SEN",
              "TZ",
              "MWI",
              "UG",
              "EG",
              "RW"
            ],
            "example": "GHA or KE"
          },
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "date_of_birth": {
            "type": "string",
            "example": "1990-01-01"
          },
          "id_number": {
            "type": "string",
            "example": "123456789"
          },
          "image": {
            "type": "string"
          },
          "id_type": {
            "type": "string",
            "enum": ["NATIONAL_ID", "ECOWAS_ID"],
            "example": "ECOWAS_ID or NATIONAL_ID"
          }
        }
      },
      "WithdrawResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "number"
          }
        },
        "required": ["id", "message", "referenceId", "referenceNumber"]
      },
      "CreateWithdrawalDto": {
        "type": "object",
        "properties": {
          "customer_key": {
            "type": "string",
            "example": "customer-key-123",
            "description": "Customer key"
          },
          "amount": {
            "type": "number",
            "description": "amount to withdraw",
            "example": 10
          },
          "walletId": {
            "type": "string",
            "description": "wallet id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "callbackUrl": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          },
          "referenceId": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          }
        },
        "required": ["customer_key", "amount", "walletId"]
      },
      "WithdrawStatusResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "withdrawal id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "amount": {
            "type": "number",
            "description": "amount to withdraw",
            "example": 10
          },
          "walletId": {
            "type": "string",
            "description": "wallet id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "callbackUrl": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          },
          "referenceId": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "status": {
            "type": "string",
            "enum": [
              "RETRY",
              "PENDING",
              "SUCCESSFUL",
              "FAILED",
              "CANCELLED",
              "REVERSED",
              "IN_PROGRESS",
              "INITIATED",
              "ERROR_OCCURRED",
              "DECLINED",
              "EXPIRED",
              "REQUIRE_REVIEW",
              "NOT_INITIATED",
              "TRANSACTION_INITIATED",
              "TRANSACTION_RETRY",
              "TRANSACTION_RETRY_SUCCESSFUL",
              "TRANSACTION_RETRY_FAILED"
            ]
          },
          "referenceNumber": {
            "type": "number"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "transactionCost": {
            "type": "number"
          },
          "transactionAmount": {
            "type": "number"
          },
          "customerKey": {
            "type": "string"
          },
          "integratorFeeAmount": {
            "type": "number"
          },
          "integratorFee": {
            "type": "number"
          },
          "integratorCommissionType": {
            "type": "string",
            "enum": ["PERCENTAGE", "FLAT", "NONE"]
          },
          "errorMessage": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "amount",
          "walletId",
          "status",
          "referenceNumber",
          "created_at",
          "transactionCost",
          "transactionAmount",
          "customerKey",
          "integratorFeeAmount",
          "integratorFee",
          "integratorCommissionType",
          "errorMessage"
        ]
      },
      "DepositResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "reference_id": {
            "type": "string"
          },
          "reference_number": {
            "type": "number"
          },
          "customer_key": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          }
        },
        "required": ["id", "message", "reference_id", "reference_number"]
      },
      "CreateDepositDto": {
        "type": "object",
        "properties": {
          "customer_key": {
            "type": "string",
            "example": "customer-key-123",
            "description": "Customer key"
          },
          "amount": {
            "type": "number",
            "description": "amount to deposit",
            "example": 10
          },
          "wallet_id": {
            "type": "string",
            "description": "deposit id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "callback_url": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          },
          "reference_id": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          }
        },
        "required": ["customer_key", "amount", "wallet_id"]
      },
      "DepositStatusResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "deposit id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "amount": {
            "type": "number",
            "description": "amount to deposit",
            "example": 10
          },
          "wallet_id": {
            "type": "string",
            "description": "deposit id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "callback_url": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          },
          "reference_id": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "INITIATED",
              "SUCCESSFUL",
              "FAILED",
              "EXPIRED",
              "CANCELLED",
              "DECLINED",
              "REVERSED",
              "IN_PROGRESS",
              "DUPLICATE",
              "ERROR_OCCURRED",
              "REQUIRE_REVIEW",
              "SUCCESS",
              "RETRY"
            ]
          },
          "reference_number": {
            "type": "number"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "transaction_cost": {
            "type": "number"
          },
          "transaction_amount": {
            "type": "number"
          },
          "customer_key": {
            "type": "string"
          },
          "initialDepositBalance": {
            "type": "number"
          },
          "finalDepositBalance": {
            "type": "number"
          },
          "error_message": {
            "type": "string"
          },
          "error_code": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "amount",
          "wallet_id",
          "status",
          "reference_number",
          "created_at",
          "transaction_cost",
          "transaction_amount",
          "customer_key"
        ]
      },
      "BankDepositCheckoutDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "full name",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Customer Phone Number",
            "example": "+245XXXXXXXXX"
          },
          "paymentMethod": {
            "type": "string",
            "enum": ["PAYBYBANK", "CARD"],
            "description": "Payment Method",
            "example": "PAYBYBANK"
          },
          "currency": {
            "type": "string",
            "description": "ZAR is currently supported",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "example": "eg ZAR"
          },
          "referenceId": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "amount": {
            "type": "number",
            "description": "amount to deposit",
            "example": 10
          },
          "callbackUrl": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          }
        },
        "required": [
          "fullName",
          "phoneNumber",
          "paymentMethod",
          "currency",
          "amount"
        ]
      },
      "DepositCheckoutResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "referenceId": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "referenceNumber": {
            "type": "number",
            "description": "reference number",
            "example": 1234567890
          },
          "message": {
            "type": "string",
            "description": "message",
            "example": "Deposit request sent successfully"
          },
          "redirectUrl": {
            "type": "string",
            "description": "redirect url",
            "example": ""
          },
          "customerKey": {
            "type": "string",
            "description": "customer key",
            "example": ""
          }
        },
        "required": ["id", "referenceId", "referenceNumber", "message"]
      },
      "CardDetailsDto": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Card Number",
            "example": "4591005500136100"
          },
          "holder": {
            "type": "string",
            "description": "Card Holder",
            "example": "John Doe"
          },
          "expiryMonth": {
            "type": "string",
            "description": "Expiry Month",
            "example": "01"
          },
          "expiryYear": {
            "type": "string",
            "description": "Expiry Year",
            "example": "2025"
          },
          "cvv": {
            "type": "string",
            "description": "CVV",
            "example": "123"
          },
          "paymentBrand": {
            "type": "string",
            "enum": ["VISA", "MASTER"],
            "description": "Payment Method",
            "example": "VISA"
          },
          "customerRedirectUrl": {
            "type": "string",
            "description": "customer redirect url",
            "example": "https://example.com"
          }
        },
        "required": [
          "number",
          "holder",
          "expiryMonth",
          "expiryYear",
          "cvv",
          "paymentBrand"
        ]
      },
      "CardDepositDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "full name",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Customer Phone Number",
            "example": "+245XXXXXXXXX"
          },
          "currency": {
            "type": "string",
            "description": "ZAR is currently supported",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "example": "eg ZAR"
          },
          "card": {
            "description": "Card Details",
            "allOf": [
              {
                "$ref": "#/components/schemas/CardDetailsDto"
              }
            ]
          },
          "referenceId": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "amount": {
            "type": "number",
            "description": "amount to deposit",
            "example": 10
          },
          "callbackUrl": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          },
          "customerRedirectUrl": {
            "type": "string",
            "description": "customer redirect url",
            "example": "https://example.com"
          }
        },
        "required": ["fullName", "phoneNumber", "currency", "card", "amount"]
      },
      "DepositCheckoutStatusResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status",
            "example": "PENDING"
          },
          "id": {
            "type": "string",
            "description": "id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "amount": {
            "type": "number",
            "description": "amount",
            "example": 10
          },
          "walletId": {
            "type": "string",
            "description": "wallet id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "callbackUrl": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          },
          "referenceId": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "referenceNumber": {
            "type": "number",
            "description": "reference number",
            "example": 1234567890
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "created at",
            "example": "2025-06-12T20:34:22.138Z"
          },
          "transactionCost": {
            "type": "number",
            "description": "transaction cost",
            "example": 10
          },
          "transactionAmount": {
            "type": "number",
            "description": "transaction amount",
            "example": 10
          },
          "customerKey": {
            "type": "string",
            "description": "customer key",
            "example": ""
          },
          "initialDepositBalance": {
            "type": "number",
            "description": "initial deposit balance",
            "example": 10
          },
          "finalDepositBalance": {
            "type": "number",
            "description": "final deposit balance",
            "example": 10
          }
        },
        "required": [
          "status",
          "id",
          "amount",
          "walletId",
          "referenceId",
          "referenceNumber",
          "createdAt",
          "transactionCost",
          "transactionAmount"
        ]
      },
      "RateResponseDto": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "From currency",
            "example": "USD"
          },
          "to": {
            "type": "string",
            "description": "To currency",
            "example": "EUR"
          },
          "value": {
            "type": "string",
            "description": "Rate value",
            "example": "0.85"
          }
        },
        "required": ["from", "to", "value"]
      },
      "OnchainRateResponseDto": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "From currency",
            "example": "USD"
          },
          "to": {
            "type": "string",
            "description": "To currency",
            "example": "EUR"
          },
          "value": {
            "type": "string",
            "description": "Rate value",
            "example": "0.85"
          },
          "id": {
            "type": "string",
            "description": "Rate ID",
            "example": "1234567890"
          },
          "fiatAmount": {
            "type": "number",
            "description": "Fiat amount",
            "example": "100"
          },
          "cryptoAmount": {
            "type": "number",
            "description": "Crypto amount",
            "example": "100"
          },
          "transactionAmount": {
            "type": "number",
            "description": "Transaction amount",
            "example": "100"
          },
          "fee": {
            "type": "number",
            "description": "Fee",
            "example": "100"
          }
        },
        "required": [
          "from",
          "to",
          "value",
          "id",
          "fiatAmount",
          "cryptoAmount",
          "transactionAmount",
          "fee"
        ]
      },
      "OnrampRateRequest": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "description": "From currency",
            "example": "KES"
          },
          "to": {
            "type": "string",
            "enum": ["CUSD", "USDC", "USDT", "USDGLO", "CKES", "CGHS", "MSAT"],
            "description": "To currency",
            "example": "USDT"
          },
          "fiatAmount": {
            "type": "number",
            "description": "Rate value",
            "example": "0.85"
          }
        },
        "required": ["from", "to", "fiatAmount"]
      },
      "OfframpRateRequest": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "enum": ["CUSD", "USDC", "USDT", "USDGLO", "CKES", "CGHS", "MSAT"],
            "description": "From currency",
            "example": "USDC"
          },
          "to": {
            "type": "string",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "description": "To currency",
            "example": "EUR"
          },
          "cryptoAmount": {
            "type": "number",
            "description": "Rate value",
            "example": "0.85"
          }
        },
        "required": ["from", "to", "cryptoAmount"]
      },
      "FiatToFiatRateResponseDto": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "From currency",
            "example": "USD"
          },
          "to": {
            "type": "string",
            "description": "To currency",
            "example": "EUR"
          },
          "value": {
            "type": "string",
            "description": "Rate value",
            "example": "0.85"
          },
          "depositAmount": {
            "type": "number",
            "description": "Deposit amount",
            "example": "100"
          },
          "withdrawalAmount": {
            "type": "number",
            "description": "Withdrawal amount",
            "example": "100"
          },
          "depositTransactionAmount": {
            "type": "number",
            "description": "Deposit transaction amount",
            "example": "100"
          },
          "withdrawalTransactionAmount": {
            "type": "number",
            "description": "Withdrawal transaction amount",
            "example": "100"
          },
          "depositFee": {
            "type": "number",
            "description": "Deposit fee",
            "example": "100"
          },
          "withdrawalFee": {
            "type": "number",
            "description": "Withdrawal fee",
            "example": "100"
          }
        },
        "required": [
          "from",
          "to",
          "value",
          "depositAmount",
          "withdrawalAmount",
          "depositTransactionAmount",
          "withdrawalTransactionAmount",
          "depositFee",
          "withdrawalFee"
        ]
      },
      "FiatRateRequestDto": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "description": "From currency",
            "example": "KES"
          },
          "to": {
            "type": "string",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "description": "To currency",
            "example": "EUR"
          },
          "amount": {
            "type": "number",
            "description": "Rate value",
            "example": "0.85"
          }
        },
        "required": ["from", "to", "amount"]
      },
      "ApiResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "The status of the response",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "The message of the response",
            "example": "Response message"
          },
          "data": {
            "type": "object"
          }
        },
        "required": ["success", "message", "data"]
      },
      "PaymentProviderDto": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency",
            "example": "NGN",
            "enum": [
              "KES",
              "GHS",
              "TZS",
              "UGX",
              "ZMW",
              "XAF",
              "CDF",
              "RWF",
              "ETB",
              "ZAR"
            ]
          },
          "paymentMethod": {
            "type": "string",
            "description": "Payment method",
            "example": "BANK_TRANSFER",
            "enum": ["mobile_money", "bank"]
          }
        },
        "required": ["currency", "paymentMethod"]
      },
      "BankDetailsDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Customer Full Name",
            "example": "George Smith"
          },
          "address": {
            "type": "string",
            "description": "Customer Address",
            "example": "Unit 163 Richmond Street, 25 Allan Road, Oakdene, 4250"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Customer Phone Number, Phone number must be in international format",
            "example": "712345678"
          },
          "bankCode": {
            "type": "number",
            "description": "The code of the bank gotten from the bank list api",
            "example": "2500"
          },
          "accountNumber": {
            "type": "string",
            "description": "The account number of the bank",
            "example": "63122514698"
          },
          "country": {
            "type": "string",
            "description": "The country of the bank",
            "example": "South Africa"
          }
        },
        "required": [
          "name",
          "address",
          "phoneNumber",
          "bankCode",
          "accountNumber",
          "country"
        ]
      },
      "WithdrawTransactionDto": {
        "type": "object",
        "properties": {
          "bankDetails": {
            "$ref": "#/components/schemas/BankDetailsDto"
          },
          "currency": {
            "type": "string",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "description": "The currency of the transaction",
            "example": "ZAR"
          },
          "amount": {
            "type": "number",
            "description": "The amount of the transaction",
            "example": 100
          },
          "referenceId": {
            "type": "string",
            "description": "The reference id of the transaction",
            "example": "1234567890"
          }
        },
        "required": ["bankDetails", "currency", "amount", "referenceId"]
      },
      "KycResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "kycId": {
            "type": "string"
          },
          "kycStatus": {
            "type": "boolean"
          }
        },
        "required": ["status"]
      },
      "KycBasicDetailsDto": {
        "type": "object",
        "properties": {
          "userEmail": {
            "type": "string"
          },
          "customerKey": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "description": "should be of this format YYYY-MM-DD"
          },
          "gender": {
            "type": "string",
            "enum": ["M", "F"]
          },
          "country": {
            "type": "string",
            "description": "example GH,KE,NG"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": [
          "userEmail",
          "customerKey",
          "firstName",
          "lastName",
          "dob",
          "gender",
          "country",
          "phone"
        ]
      },
      "KycAddressDto": {
        "type": "object",
        "properties": {
          "kycId": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "town": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "example GH,KE,NG"
          }
        },
        "required": ["kycId", "street", "town", "country"]
      },
      "KycDocumentDto": {
        "type": "object",
        "properties": {
          "kycId": {
            "type": "string"
          },
          "nationality": {
            "type": "string",
            "description": "example Ghanian, Nigerian"
          },
          "documentNo": {
            "type": "string"
          },
          "documentExpirationDate": {
            "type": "string",
            "description": "should be of this format YYYY-MM-DD"
          },
          "country": {
            "type": "string",
            "description": "example Ghana, Nigeria, Kenya"
          },
          "documentName": {
            "type": "string",
            "description": "example PASSPORT, GOVERNMENT ID, VOTERS ID"
          }
        },
        "required": [
          "kycId",
          "nationality",
          "documentNo",
          "documentExpirationDate",
          "country",
          "documentName"
        ]
      },
      "IntegratorKycUsersResponseDto": {
        "type": "object",
        "properties": {
          "kycId": {
            "type": "string"
          },
          "kycVerified": {
            "type": "boolean"
          },
          "basicDetails": {
            "$ref": "#/components/schemas/KycBasicDetailsDto"
          },
          "address": {
            "$ref": "#/components/schemas/KycAddressDto"
          },
          "document": {
            "$ref": "#/components/schemas/KycDocumentDto"
          }
        },
        "required": [
          "kycId",
          "kycVerified",
          "basicDetails",
          "address",
          "document"
        ]
      },
      "OfframpResponseDto": {
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string",
            "description": "Reference ID"
          },
          "fiatAmount": {
            "type": "number",
            "description": "Fiat amount"
          },
          "fiatTransactionAmount": {
            "type": "number",
            "description": "Fiat transaction amount"
          },
          "cryptoAmount": {
            "type": "number",
            "description": "Crypto amount"
          },
          "fiatCurrency": {
            "type": "string",
            "description": "Fiat currency",
            "enum": [
              "KES",
              "GHS",
              "TZS",
              "UGX",
              "ZMW",
              "XAF",
              "CDF",
              "RWF",
              "ETB",
              "ZAR"
            ]
          },
          "customerKey": {
            "type": "string",
            "description": "Customer key"
          },
          "fiatWalletId": {
            "type": "string",
            "description": "Fiat wallet ID"
          },
          "senderAddress": {
            "type": "string",
            "description": "Sender address"
          },
          "transactionHash": {
            "type": "string",
            "description": "Transaction hash"
          },
          "transactionHashAmount": {
            "type": "number",
            "description": "Transaction hash amount"
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "onchainStatus": {
            "type": "string",
            "description": "Onchain status"
          },
          "rate": {
            "type": "object",
            "description": "Rate"
          },
          "escrowAddress": {
            "type": "string",
            "description": "Escrow address"
          }
        },
        "required": [
          "referenceId",
          "fiatAmount",
          "fiatTransactionAmount",
          "cryptoAmount",
          "fiatCurrency",
          "customerKey",
          "fiatWalletId",
          "senderAddress",
          "transactionHash",
          "transactionHashAmount",
          "status",
          "onchainStatus",
          "rate",
          "escrowAddress"
        ]
      },
      "MobileMoneyReceiverDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Phone number"
          },
          "accountName": {
            "type": "string",
            "description": "Account name"
          },
          "networkProvider": {
            "type": "string",
            "description": "Provider network (Check Payment Providers API for available networks)",
            "example": "MTN, VODAFONE, AIRTEL, MPESA"
          }
        },
        "required": ["phoneNumber", "accountName", "networkProvider"]
      },
      "BankDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Full name"
          },
          "address": {
            "type": "string",
            "description": "Address"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number"
          },
          "bankCode": {
            "type": "number",
            "description": "Bank code"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "country": {
            "type": "string",
            "description": "Country"
          }
        },
        "required": [
          "name",
          "address",
          "phoneNumber",
          "bankCode",
          "accountNumber",
          "country"
        ]
      },
      "OfframpDto": {
        "type": "object",
        "properties": {
          "mobileMoneyReceiver": {
            "description": "Mobile Money receiver details",
            "allOf": [
              {
                "$ref": "#/components/schemas/MobileMoneyReceiverDto"
              }
            ]
          },
          "bankReceiver": {
            "description": "Bank receiver details",
            "allOf": [
              {
                "$ref": "#/components/schemas/BankDto"
              }
            ]
          },
          "cryptoAmount": {
            "type": "number",
            "description": "The crypto amount"
          },
          "currency": {
            "type": "string",
            "description": "Fiat currency",
            "enum": [
              "KES",
              "GHS",
              "TZS",
              "UGX",
              "ZMW",
              "XAF",
              "CDF",
              "RWF",
              "ETB",
              "ZAR"
            ]
          },
          "chain": {
            "type": "string",
            "description": "Chain",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA",
              "BASE",
              "LISK",
              "VICTION",
              "SCROLL"
            ]
          },
          "token": {
            "type": "string",
            "description": "Stable Coin or Token",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO",
              "CKES",
              "CGHS",
              "MSAT"
            ]
          },
          "referenceId": {
            "type": "string",
            "description": "Reference ID"
          },
          "senderAddress": {
            "type": "string",
            "description": "Sender address"
          },
          "callbackUrl": {
            "type": "string",
            "description": "Callback Url"
          },
          "rateId": {
            "type": "string",
            "description": "Rate ID"
          }
        },
        "required": [
          "cryptoAmount",
          "currency",
          "chain",
          "token",
          "referenceId",
          "senderAddress"
        ]
      },
      "OnrampCryptoResponseDto": {
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string",
            "description": "The reference ID of the onramp crypto transaction"
          },
          "status": {
            "type": "string",
            "description": "The status of the onramp crypto transaction"
          },
          "cryptoAmount": {
            "type": "number",
            "description": "The amount of crypto sent"
          },
          "cryptoAmountReceived": {
            "type": "number",
            "description": "The amount of crypto received"
          },
          "feeInCrypto": {
            "type": "number",
            "description": "The fee in crypto"
          },
          "feeType": {
            "type": "string",
            "description": "The type of fee"
          },
          "cryptoWallet": {
            "type": "string",
            "description": "The ID of the crypto wallet"
          },
          "chain": {
            "type": "object",
            "description": "The chain of the onramp crypto transaction"
          },
          "token": {
            "type": "object",
            "description": "The token of the onramp crypto transaction"
          },
          "transactionHash": {
            "type": "string",
            "description": "The transaction hash of the onramp crypto transaction"
          }
        },
        "required": [
          "referenceId",
          "status",
          "cryptoAmount",
          "cryptoAmountReceived",
          "feeInCrypto",
          "feeType",
          "cryptoWallet",
          "chain",
          "token",
          "transactionHash"
        ]
      },
      "CreateOnrampCryptoDto": {
        "type": "object",
        "properties": {
          "receiverAddress": {
            "type": "string",
            "description": "The receiver address of the onramp crypto transaction"
          },
          "chain": {
            "type": "string",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA",
              "BASE",
              "LISK",
              "VICTION",
              "SCROLL"
            ],
            "description": "The chain of the onramp crypto transaction"
          },
          "token": {
            "type": "string",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO",
              "CKES",
              "CGHS",
              "MSAT"
            ],
            "description": "The token of the onramp crypto transaction"
          },
          "cryptoAmount": {
            "type": "number",
            "description": "The amount of crypto sent"
          },
          "referenceId": {
            "type": "string",
            "description": "The reference ID of the onramp crypto transaction"
          }
        },
        "required": [
          "receiverAddress",
          "chain",
          "token",
          "cryptoAmount",
          "referenceId"
        ]
      },
      "OnrampRequestResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Onramp ID"
          },
          "referenceId": {
            "type": "string",
            "description": "Onramp reference ID"
          },
          "referenceNumber": {
            "type": "number",
            "description": "Onramp reference number"
          },
          "message": {
            "type": "string",
            "description": "Onramp message"
          },
          "customerKey": {
            "type": "string",
            "description": "Onramp customer key"
          },
          "redirectUrl": {
            "type": "string",
            "description": "Onramp redirect URL"
          }
        },
        "required": [
          "id",
          "referenceId",
          "referenceNumber",
          "message",
          "customerKey"
        ]
      },
      "MobileMoneyDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Phone number"
          },
          "accountName": {
            "type": "string",
            "description": "Account name"
          },
          "providerNetwork": {
            "type": "string",
            "description": "Provider network (Check Payment Providers API for available networks)",
            "example": "MTN, VODAFONE, AIRTEL, MPESA"
          }
        },
        "required": ["phoneNumber", "accountName", "providerNetwork"]
      },
      "BankCheckoutDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number"
          },
          "paymentMethod": {
            "type": "string",
            "description": "Payment method should be CARD OR PAYBYBANK"
          }
        },
        "required": ["fullName", "phoneNumber"]
      },
      "OnrampDto": {
        "type": "object",
        "properties": {
          "mobileMoney": {
            "description": "Mobile Money details",
            "allOf": [
              {
                "$ref": "#/components/schemas/MobileMoneyDto"
              }
            ]
          },
          "bankCheckout": {
            "description": "Bank Checkout details",
            "allOf": [
              {
                "$ref": "#/components/schemas/BankCheckoutDto"
              }
            ]
          },
          "fiatAmount": {
            "type": "number",
            "description": "Fiat amount"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the wallet",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "example": "eg NGN or GHS or KES"
          },
          "chain": {
            "type": "string",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA",
              "BASE",
              "LISK",
              "VICTION",
              "SCROLL"
            ],
            "description": "Chain"
          },
          "token": {
            "type": "string",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO",
              "CKES",
              "CGHS",
              "MSAT"
            ],
            "description": "Stable Coin"
          },
          "receiverAddress": {
            "type": "string",
            "description": "Receiver address"
          },
          "referenceId": {
            "type": "string",
            "description": "Reference ID"
          },
          "callbackUrl": {
            "type": "string",
            "description": "Reference ID"
          },
          "rateId": {
            "type": "string",
            "description": "Rate ID"
          }
        },
        "required": [
          "fiatAmount",
          "currency",
          "chain",
          "token",
          "receiverAddress",
          "referenceId",
          "callbackUrl"
        ]
      },
      "OnrampResponseDto": {
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string",
            "description": "Onramp reference ID"
          },
          "depositStatus": {
            "type": "string",
            "enum": [
              "PENDING",
              "INITIATED",
              "SUCCESSFUL",
              "FAILED",
              "EXPIRED",
              "CANCELLED",
              "DECLINED",
              "REVERSED",
              "IN_PROGRESS",
              "DUPLICATE",
              "ERROR_OCCURRED",
              "REQUIRE_REVIEW",
              "SUCCESS",
              "RETRY"
            ],
            "description": "Deposit status"
          },
          "onchainStatus": {
            "type": "string",
            "enum": [
              "PENDING",
              "INITIATED",
              "SUCCESSFUL",
              "FAILED",
              "EXPIRED",
              "CANCELLED",
              "DECLINED",
              "REVERSED",
              "IN_PROGRESS",
              "DUPLICATE",
              "ERROR_OCCURRED",
              "REQUIRE_REVIEW",
              "SUCCESS",
              "RETRY"
            ],
            "description": "Onchain status"
          },
          "transactionHash": {
            "type": "string",
            "description": "Transaction hash"
          },
          "rate": {
            "type": "object",
            "description": "Rate"
          },
          "fiatAmount": {
            "type": "number",
            "description": "Crypto amount"
          },
          "cryptoAmount": {
            "type": "number",
            "description": "Crypto amount"
          }
        },
        "required": [
          "referenceId",
          "depositStatus",
          "onchainStatus",
          "rate",
          "fiatAmount",
          "cryptoAmount"
        ]
      },
      "FiatToFiatInvoiceResponseDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string",
            "description": "The id of the invoice",
            "example": "1e476673-0931-4eba-8373-37b368ce59f7"
          },
          "referenceId": {
            "type": "string",
            "description": "The reference id of the invoice",
            "example": "1e476673-0931-4eba-8373-37b368ce59f7"
          }
        },
        "required": ["invoiceId", "referenceId"]
      },
      "GenerateInvoiceDto": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "description": "The currency of the invoice",
            "example": "KES"
          },
          "amount": {
            "type": "number",
            "description": "The amount of the invoice",
            "example": 1000
          },
          "bank": {
            "description": "The bank details of the invoice",
            "example": {
              "accountName": "John Doe",
              "address": "123 Main St",
              "phoneNumber": "+254712345678",
              "bankCode": 123456,
              "accountNumber": "1234567890",
              "country": "Kenya"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/BankDto"
              }
            ]
          },
          "referenceId": {
            "type": "string",
            "description": "The reference id of the invoice",
            "example": "1e476673-0931-4eba-8373-37b368ce59f7"
          },
          "userReference": {
            "type": "string",
            "description": "The user reference of the invoice",
            "example": "1e476673-0931-4eba-8373-37b368ce59f7"
          }
        },
        "required": ["currency", "amount", "bank", "referenceId"]
      },
      "GetInvoiceResponseDto": {
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string",
            "description": "The reference id of the invoice",
            "example": "1e476673-0931-4eba-8373-37b368ce59f7"
          },
          "amount": {
            "type": "number",
            "description": "Amount to be paid",
            "example": "John Doe"
          },
          "currency": {
            "type": "string",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "description": "Currency of the amount",
            "example": "+254712345678"
          },
          "accountName": {
            "type": "string",
            "description": "The account name of the invoice",
            "example": "John Doe"
          },
          "address": {
            "type": "string",
            "description": "The address of the invoice",
            "example": "123 Main St"
          },
          "phoneNumber": {
            "type": "string",
            "description": "The phone number of the invoice",
            "example": "+254712345678"
          },
          "bankCode": {
            "type": "string",
            "description": "The bank code of the invoice",
            "example": "123456"
          },
          "accountNumber": {
            "type": "string",
            "description": "The account number of the invoice",
            "example": "1234567890"
          },
          "country": {
            "type": "string",
            "description": "The country of the invoice",
            "example": "Kenya"
          },
          "invoice": {
            "type": "object",
            "description": "The invoice details",
            "example": {
              "referenceId": "1e476673-0931-4eba-8373-37b368ce59f7",
              "invoiceId": "1e476673-0931-4eba-8373-37b368ce59f7",
              "amount": 1000,
              "currency": "KES"
            }
          }
        },
        "required": [
          "referenceId",
          "amount",
          "currency",
          "accountName",
          "address",
          "phoneNumber",
          "bankCode",
          "accountNumber",
          "country",
          "invoice"
        ]
      },
      "PayInvoiceDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The amount of the invoice",
            "example": 1000
          },
          "currency": {
            "type": "string",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "description": "The currency of the invoice",
            "example": "KES"
          },
          "referenceId": {
            "type": "string",
            "description": "The reference id of the invoice",
            "example": "1e476673-0931-4eba-8373-37b368ce59f7"
          },
          "mobileMoney": {
            "description": "The mobile money details of the invoice",
            "example": {
              "accountName": "John Doe",
              "phoneNumber": "+254712345678",
              "providerNetwork": "MTN"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/MobileMoneyDto"
              }
            ]
          }
        },
        "required": ["amount", "currency", "referenceId", "mobileMoney"]
      },
      "PayInvoice": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "The amount of the invoice",
            "example": 1000
          },
          "currency": {
            "type": "string",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "description": "The currency of the invoice",
            "example": "KES"
          },
          "status": {
            "type": "string",
            "description": "The status of the invoice",
            "example": "PENDING"
          }
        },
        "required": ["amount", "currency", "status"]
      },
      "PayInvoiceResponseDto": {
        "type": "object",
        "properties": {
          "invoice": {
            "description": "The invoice details",
            "example": {
              "amount": 1000,
              "currency": "KES",
              "status": "PENDING"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/PayInvoice"
              }
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "SLE",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF",
              "ETB"
            ],
            "description": "The currency of the invoice",
            "example": "KES"
          },
          "amount": {
            "type": "number",
            "description": "The amount of the invoice",
            "example": 1000
          },
          "referenceId": {
            "type": "string",
            "description": "The reference id of the invoice",
            "example": "1e476673-0931-4eba-8373-37b368ce59f7"
          },
          "status": {
            "type": "string",
            "enum": [
              "RETRY",
              "PENDING",
              "SUCCESSFUL",
              "FAILED",
              "CANCELLED",
              "REVERSED",
              "IN_PROGRESS",
              "INITIATED",
              "ERROR_OCCURRED",
              "DECLINED",
              "EXPIRED",
              "REQUIRE_REVIEW",
              "NOT_INITIATED",
              "TRANSACTION_INITIATED",
              "TRANSACTION_RETRY",
              "TRANSACTION_RETRY_SUCCESSFUL",
              "TRANSACTION_RETRY_FAILED"
            ],
            "description": "The status of the invoice",
            "example": "PENDING"
          }
        },
        "required": ["invoice", "currency", "amount", "referenceId", "status"]
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}
